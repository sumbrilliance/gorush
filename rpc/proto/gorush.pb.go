// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gorush.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_struct "github.com/golang/protobuf/ptypes/struct"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type HealthCheckResponse_ServingStatus int32

const (
	HealthCheckResponse_UNKNOWN     HealthCheckResponse_ServingStatus = 0
	HealthCheckResponse_SERVING     HealthCheckResponse_ServingStatus = 1
	HealthCheckResponse_NOT_SERVING HealthCheckResponse_ServingStatus = 2
)

var HealthCheckResponse_ServingStatus_name = map[int32]string{
	0: "UNKNOWN",
	1: "SERVING",
	2: "NOT_SERVING",
}

var HealthCheckResponse_ServingStatus_value = map[string]int32{
	"UNKNOWN":     0,
	"SERVING":     1,
	"NOT_SERVING": 2,
}

func (x HealthCheckResponse_ServingStatus) String() string {
	return proto.EnumName(HealthCheckResponse_ServingStatus_name, int32(x))
}

func (HealthCheckResponse_ServingStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_40935fa25e258221, []int{4, 0}
}

type Alert struct {
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Body                 string   `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	Subtitle             string   `protobuf:"bytes,3,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	Action               string   `protobuf:"bytes,4,opt,name=action,proto3" json:"action,omitempty"`
	ActionLocKey         string   `protobuf:"bytes,5,opt,name=actionLocKey,proto3" json:"actionLocKey,omitempty"`
	LaunchImage          string   `protobuf:"bytes,6,opt,name=launchImage,proto3" json:"launchImage,omitempty"`
	LocKey               string   `protobuf:"bytes,7,opt,name=locKey,proto3" json:"locKey,omitempty"`
	TitleLocKey          string   `protobuf:"bytes,8,opt,name=titleLocKey,proto3" json:"titleLocKey,omitempty"`
	LocArgs              []string `protobuf:"bytes,9,rep,name=locArgs,proto3" json:"locArgs,omitempty"`
	TitleLocArgs         []string `protobuf:"bytes,10,rep,name=titleLocArgs,proto3" json:"titleLocArgs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Alert) Reset()         { *m = Alert{} }
func (m *Alert) String() string { return proto.CompactTextString(m) }
func (*Alert) ProtoMessage()    {}
func (*Alert) Descriptor() ([]byte, []int) {
	return fileDescriptor_40935fa25e258221, []int{0}
}

func (m *Alert) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Alert.Unmarshal(m, b)
}
func (m *Alert) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Alert.Marshal(b, m, deterministic)
}
func (m *Alert) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Alert.Merge(m, src)
}
func (m *Alert) XXX_Size() int {
	return xxx_messageInfo_Alert.Size(m)
}
func (m *Alert) XXX_DiscardUnknown() {
	xxx_messageInfo_Alert.DiscardUnknown(m)
}

var xxx_messageInfo_Alert proto.InternalMessageInfo

func (m *Alert) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Alert) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *Alert) GetSubtitle() string {
	if m != nil {
		return m.Subtitle
	}
	return ""
}

func (m *Alert) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *Alert) GetActionLocKey() string {
	if m != nil {
		return m.ActionLocKey
	}
	return ""
}

func (m *Alert) GetLaunchImage() string {
	if m != nil {
		return m.LaunchImage
	}
	return ""
}

func (m *Alert) GetLocKey() string {
	if m != nil {
		return m.LocKey
	}
	return ""
}

func (m *Alert) GetTitleLocKey() string {
	if m != nil {
		return m.TitleLocKey
	}
	return ""
}

func (m *Alert) GetLocArgs() []string {
	if m != nil {
		return m.LocArgs
	}
	return nil
}

func (m *Alert) GetTitleLocArgs() []string {
	if m != nil {
		return m.TitleLocArgs
	}
	return nil
}

type NotificationRequest struct {
	Tokens               []string        `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty"`
	Platform             int32           `protobuf:"varint,2,opt,name=platform,proto3" json:"platform,omitempty"`
	Message              string          `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Title                string          `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Topic                string          `protobuf:"bytes,5,opt,name=topic,proto3" json:"topic,omitempty"`
	Key                  string          `protobuf:"bytes,6,opt,name=key,proto3" json:"key,omitempty"`
	Badge                int32           `protobuf:"varint,7,opt,name=badge,proto3" json:"badge,omitempty"`
	Category             string          `protobuf:"bytes,8,opt,name=category,proto3" json:"category,omitempty"`
	Alert                *Alert          `protobuf:"bytes,9,opt,name=alert,proto3" json:"alert,omitempty"`
	Sound                string          `protobuf:"bytes,10,opt,name=sound,proto3" json:"sound,omitempty"`
	ContentAvailable     bool            `protobuf:"varint,11,opt,name=contentAvailable,proto3" json:"contentAvailable,omitempty"`
	ThreadID             string          `protobuf:"bytes,12,opt,name=threadID,proto3" json:"threadID,omitempty"`
	MutableContent       bool            `protobuf:"varint,13,opt,name=mutableContent,proto3" json:"mutableContent,omitempty"`
	Data                 *_struct.Struct `protobuf:"bytes,14,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *NotificationRequest) Reset()         { *m = NotificationRequest{} }
func (m *NotificationRequest) String() string { return proto.CompactTextString(m) }
func (*NotificationRequest) ProtoMessage()    {}
func (*NotificationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_40935fa25e258221, []int{1}
}

func (m *NotificationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotificationRequest.Unmarshal(m, b)
}
func (m *NotificationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotificationRequest.Marshal(b, m, deterministic)
}
func (m *NotificationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotificationRequest.Merge(m, src)
}
func (m *NotificationRequest) XXX_Size() int {
	return xxx_messageInfo_NotificationRequest.Size(m)
}
func (m *NotificationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NotificationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NotificationRequest proto.InternalMessageInfo

func (m *NotificationRequest) GetTokens() []string {
	if m != nil {
		return m.Tokens
	}
	return nil
}

func (m *NotificationRequest) GetPlatform() int32 {
	if m != nil {
		return m.Platform
	}
	return 0
}

func (m *NotificationRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *NotificationRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *NotificationRequest) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *NotificationRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *NotificationRequest) GetBadge() int32 {
	if m != nil {
		return m.Badge
	}
	return 0
}

func (m *NotificationRequest) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *NotificationRequest) GetAlert() *Alert {
	if m != nil {
		return m.Alert
	}
	return nil
}

func (m *NotificationRequest) GetSound() string {
	if m != nil {
		return m.Sound
	}
	return ""
}

func (m *NotificationRequest) GetContentAvailable() bool {
	if m != nil {
		return m.ContentAvailable
	}
	return false
}

func (m *NotificationRequest) GetThreadID() string {
	if m != nil {
		return m.ThreadID
	}
	return ""
}

func (m *NotificationRequest) GetMutableContent() bool {
	if m != nil {
		return m.MutableContent
	}
	return false
}

func (m *NotificationRequest) GetData() *_struct.Struct {
	if m != nil {
		return m.Data
	}
	return nil
}

type NotificationReply struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Counts               int32    `protobuf:"varint,2,opt,name=counts,proto3" json:"counts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NotificationReply) Reset()         { *m = NotificationReply{} }
func (m *NotificationReply) String() string { return proto.CompactTextString(m) }
func (*NotificationReply) ProtoMessage()    {}
func (*NotificationReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_40935fa25e258221, []int{2}
}

func (m *NotificationReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotificationReply.Unmarshal(m, b)
}
func (m *NotificationReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotificationReply.Marshal(b, m, deterministic)
}
func (m *NotificationReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotificationReply.Merge(m, src)
}
func (m *NotificationReply) XXX_Size() int {
	return xxx_messageInfo_NotificationReply.Size(m)
}
func (m *NotificationReply) XXX_DiscardUnknown() {
	xxx_messageInfo_NotificationReply.DiscardUnknown(m)
}

var xxx_messageInfo_NotificationReply proto.InternalMessageInfo

func (m *NotificationReply) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *NotificationReply) GetCounts() int32 {
	if m != nil {
		return m.Counts
	}
	return 0
}

type HealthCheckRequest struct {
	Service              string   `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthCheckRequest) Reset()         { *m = HealthCheckRequest{} }
func (m *HealthCheckRequest) String() string { return proto.CompactTextString(m) }
func (*HealthCheckRequest) ProtoMessage()    {}
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_40935fa25e258221, []int{3}
}

func (m *HealthCheckRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthCheckRequest.Unmarshal(m, b)
}
func (m *HealthCheckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthCheckRequest.Marshal(b, m, deterministic)
}
func (m *HealthCheckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthCheckRequest.Merge(m, src)
}
func (m *HealthCheckRequest) XXX_Size() int {
	return xxx_messageInfo_HealthCheckRequest.Size(m)
}
func (m *HealthCheckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthCheckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HealthCheckRequest proto.InternalMessageInfo

func (m *HealthCheckRequest) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

type HealthCheckResponse struct {
	Status               HealthCheckResponse_ServingStatus `protobuf:"varint,1,opt,name=status,proto3,enum=proto.HealthCheckResponse_ServingStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *HealthCheckResponse) Reset()         { *m = HealthCheckResponse{} }
func (m *HealthCheckResponse) String() string { return proto.CompactTextString(m) }
func (*HealthCheckResponse) ProtoMessage()    {}
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_40935fa25e258221, []int{4}
}

func (m *HealthCheckResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthCheckResponse.Unmarshal(m, b)
}
func (m *HealthCheckResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthCheckResponse.Marshal(b, m, deterministic)
}
func (m *HealthCheckResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthCheckResponse.Merge(m, src)
}
func (m *HealthCheckResponse) XXX_Size() int {
	return xxx_messageInfo_HealthCheckResponse.Size(m)
}
func (m *HealthCheckResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthCheckResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HealthCheckResponse proto.InternalMessageInfo

func (m *HealthCheckResponse) GetStatus() HealthCheckResponse_ServingStatus {
	if m != nil {
		return m.Status
	}
	return HealthCheckResponse_UNKNOWN
}

func init() {
	proto.RegisterEnum("proto.HealthCheckResponse_ServingStatus", HealthCheckResponse_ServingStatus_name, HealthCheckResponse_ServingStatus_value)
	proto.RegisterType((*Alert)(nil), "proto.Alert")
	proto.RegisterType((*NotificationRequest)(nil), "proto.NotificationRequest")
	proto.RegisterType((*NotificationReply)(nil), "proto.NotificationReply")
	proto.RegisterType((*HealthCheckRequest)(nil), "proto.HealthCheckRequest")
	proto.RegisterType((*HealthCheckResponse)(nil), "proto.HealthCheckResponse")
}

func init() { proto.RegisterFile("gorush.proto", fileDescriptor_40935fa25e258221) }

var fileDescriptor_40935fa25e258221 = []byte{
	// 607 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x54, 0x4f, 0x6f, 0xd3, 0x4e,
	0x10, 0xad, 0x9b, 0x38, 0x4d, 0x26, 0x69, 0x7f, 0xf9, 0x6d, 0x11, 0x2c, 0x11, 0x87, 0xc8, 0x07,
	0x14, 0x81, 0xe4, 0x4a, 0xe5, 0xc6, 0xa1, 0xa2, 0x2a, 0x55, 0x5b, 0x15, 0xb9, 0x92, 0xc3, 0x9f,
	0x23, 0x5a, 0xaf, 0xb7, 0x8e, 0xd5, 0x8d, 0xd7, 0x78, 0xd7, 0x95, 0xf2, 0x39, 0xf8, 0x08, 0xdc,
	0xf8, 0x94, 0x68, 0x67, 0xed, 0x90, 0x40, 0x38, 0x65, 0xdf, 0x9b, 0x99, 0xb7, 0x6f, 0x67, 0x26,
	0x86, 0x51, 0xa6, 0xaa, 0x5a, 0x2f, 0xc2, 0xb2, 0x52, 0x46, 0x11, 0x1f, 0x7f, 0x26, 0x2f, 0x32,
	0xa5, 0x32, 0x29, 0x4e, 0x10, 0x25, 0xf5, 0xfd, 0x89, 0x36, 0x55, 0xcd, 0x8d, 0x4b, 0x0a, 0x7e,
	0xec, 0x83, 0x7f, 0x2e, 0x45, 0x65, 0xc8, 0x13, 0xf0, 0x4d, 0x6e, 0xa4, 0xa0, 0xde, 0xd4, 0x9b,
	0x0d, 0x62, 0x07, 0x08, 0x81, 0x6e, 0xa2, 0xd2, 0x15, 0xdd, 0x47, 0x12, 0xcf, 0x64, 0x02, 0x7d,
	0x5d, 0x27, 0x2e, 0xb9, 0x83, 0xfc, 0x1a, 0x93, 0xa7, 0xd0, 0x63, 0xdc, 0xe4, 0xaa, 0xa0, 0x5d,
	0x8c, 0x34, 0x88, 0x04, 0x30, 0x72, 0xa7, 0x0f, 0x8a, 0xdf, 0x8a, 0x15, 0xf5, 0x31, 0xba, 0xc5,
	0x91, 0x29, 0x0c, 0x25, 0xab, 0x0b, 0xbe, 0xb8, 0x59, 0xb2, 0x4c, 0xd0, 0x1e, 0xa6, 0x6c, 0x52,
	0x56, 0x5d, 0xba, 0xfa, 0x03, 0xa7, 0x2e, 0xd7, 0x95, 0x78, 0x7d, 0x23, 0xde, 0x77, 0x95, 0x1b,
	0x14, 0xa1, 0x70, 0x20, 0x15, 0x3f, 0xaf, 0x32, 0x4d, 0x07, 0xd3, 0xce, 0x6c, 0x10, 0xb7, 0xd0,
	0x3a, 0x6b, 0x13, 0x31, 0x0c, 0x18, 0xde, 0xe2, 0x82, 0x9f, 0x1d, 0x38, 0x8e, 0x94, 0xc9, 0xef,
	0x73, 0xce, 0xac, 0xe1, 0x58, 0x7c, 0xab, 0x85, 0x36, 0xd6, 0x8f, 0x51, 0x0f, 0xa2, 0xd0, 0xd4,
	0xc3, 0xaa, 0x06, 0xd9, 0x0e, 0x95, 0x92, 0x99, 0x7b, 0x55, 0x2d, 0xb1, 0x73, 0x7e, 0xbc, 0xc6,
	0xd6, 0xc9, 0x52, 0x68, 0x6d, 0x5f, 0xe8, 0x9a, 0xd7, 0xc2, 0xdf, 0x13, 0xe8, 0x6e, 0x4e, 0xc0,
	0xb2, 0xaa, 0xcc, 0x79, 0xd3, 0x32, 0x07, 0xc8, 0x18, 0x3a, 0x0f, 0x62, 0xd5, 0xf4, 0xc8, 0x1e,
	0x6d, 0x5e, 0xc2, 0xd2, 0x4c, 0x60, 0x6b, 0xfc, 0xd8, 0x01, 0xeb, 0x84, 0x33, 0x23, 0x32, 0x55,
	0xb5, 0x6d, 0x59, 0x63, 0x12, 0x80, 0xcf, 0xec, 0xe8, 0xe9, 0x60, 0xea, 0xcd, 0x86, 0xa7, 0x23,
	0xb7, 0x12, 0x21, 0xae, 0x43, 0xec, 0x42, 0x56, 0x55, 0xab, 0xba, 0x48, 0x29, 0xb8, 0xdb, 0x11,
	0x90, 0x57, 0x30, 0xe6, 0xaa, 0x30, 0xa2, 0x30, 0xe7, 0x8f, 0x2c, 0x97, 0x2c, 0x91, 0x82, 0x0e,
	0xa7, 0xde, 0xac, 0x1f, 0xff, 0xc5, 0x5b, 0x07, 0x66, 0x51, 0x09, 0x96, 0xde, 0xbc, 0xa7, 0x23,
	0xe7, 0xa0, 0xc5, 0xe4, 0x25, 0x1c, 0x2d, 0x6b, 0x63, 0xd3, 0x2e, 0x5c, 0x19, 0x3d, 0x44, 0x95,
	0x3f, 0x58, 0xf2, 0x1a, 0xba, 0x29, 0x33, 0x8c, 0x1e, 0xa1, 0xd1, 0x67, 0xa1, 0x5b, 0xe9, 0xb0,
	0x5d, 0xe9, 0x70, 0x8e, 0x2b, 0x1d, 0x63, 0x52, 0x70, 0x09, 0xff, 0x6f, 0xcf, 0xaa, 0x94, 0x38,
	0x7f, 0x5d, 0x73, 0x2e, 0xb4, 0xc6, 0xfd, 0xee, 0xc7, 0x2d, 0xb4, 0x33, 0xe4, 0xaa, 0x2e, 0x8c,
	0x6e, 0x26, 0xd5, 0xa0, 0x20, 0x04, 0x72, 0x2d, 0x98, 0x34, 0x8b, 0x8b, 0x85, 0xe0, 0x0f, 0xed,
	0xc4, 0xad, 0x8e, 0xa8, 0x1e, 0x73, 0xde, 0xfe, 0x4f, 0x5a, 0x18, 0x7c, 0xf7, 0xe0, 0x78, 0xab,
	0x40, 0x97, 0xaa, 0xd0, 0x82, 0xbc, 0x83, 0x9e, 0x36, 0xcc, 0xd4, 0xee, 0xe2, 0xa3, 0xd3, 0x59,
	0xd3, 0xe6, 0x1d, 0xb9, 0xe1, 0xdc, 0x6a, 0x15, 0xd9, 0x1c, 0xf3, 0xe3, 0xa6, 0x2e, 0x78, 0x0b,
	0x87, 0x5b, 0x01, 0x32, 0x84, 0x83, 0x4f, 0xd1, 0x6d, 0x74, 0xf7, 0x25, 0x1a, 0xef, 0x59, 0x30,
	0xbf, 0x8c, 0x3f, 0xdf, 0x44, 0x57, 0x63, 0x8f, 0xfc, 0x07, 0xc3, 0xe8, 0xee, 0xe3, 0xd7, 0x96,
	0xd8, 0x3f, 0xbd, 0x86, 0xde, 0x15, 0x7e, 0x14, 0xc8, 0x19, 0x74, 0xe7, 0xa2, 0x48, 0xc9, 0xa4,
	0xb9, 0x7f, 0xc7, 0x3e, 0x4f, 0xe8, 0xce, 0x58, 0x29, 0x57, 0xc1, 0x9e, 0x55, 0x72, 0x96, 0xc9,
	0x19, 0xf8, 0x68, 0x9b, 0x3c, 0xdf, 0xf5, 0x14, 0xa7, 0x34, 0xf9, 0xf7, 0x2b, 0x93, 0x1e, 0x86,
	0xde, 0xfc, 0x0a, 0x00, 0x00, 0xff, 0xff, 0x46, 0xa4, 0x16, 0xe6, 0xaf, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GorushClient is the client API for Gorush service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GorushClient interface {
	Send(ctx context.Context, in *NotificationRequest, opts ...grpc.CallOption) (*NotificationReply, error)
}

type gorushClient struct {
	cc *grpc.ClientConn
}

func NewGorushClient(cc *grpc.ClientConn) GorushClient {
	return &gorushClient{cc}
}

func (c *gorushClient) Send(ctx context.Context, in *NotificationRequest, opts ...grpc.CallOption) (*NotificationReply, error) {
	out := new(NotificationReply)
	err := c.cc.Invoke(ctx, "/proto.Gorush/Send", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GorushServer is the server API for Gorush service.
type GorushServer interface {
	Send(context.Context, *NotificationRequest) (*NotificationReply, error)
}

func RegisterGorushServer(s *grpc.Server, srv GorushServer) {
	s.RegisterService(&_Gorush_serviceDesc, srv)
}

func _Gorush_Send_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NotificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GorushServer).Send(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Gorush/Send",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GorushServer).Send(ctx, req.(*NotificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Gorush_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Gorush",
	HandlerType: (*GorushServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Send",
			Handler:    _Gorush_Send_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gorush.proto",
}

// HealthClient is the client API for Health service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HealthClient interface {
	Check(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (*HealthCheckResponse, error)
}

type healthClient struct {
	cc *grpc.ClientConn
}

func NewHealthClient(cc *grpc.ClientConn) HealthClient {
	return &healthClient{cc}
}

func (c *healthClient) Check(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (*HealthCheckResponse, error) {
	out := new(HealthCheckResponse)
	err := c.cc.Invoke(ctx, "/proto.Health/Check", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HealthServer is the server API for Health service.
type HealthServer interface {
	Check(context.Context, *HealthCheckRequest) (*HealthCheckResponse, error)
}

func RegisterHealthServer(s *grpc.Server, srv HealthServer) {
	s.RegisterService(&_Health_serviceDesc, srv)
}

func _Health_Check_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HealthCheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HealthServer).Check(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Health/Check",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HealthServer).Check(ctx, req.(*HealthCheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Health_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Health",
	HandlerType: (*HealthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Check",
			Handler:    _Health_Check_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gorush.proto",
}
